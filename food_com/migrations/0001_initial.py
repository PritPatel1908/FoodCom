# Generated by Django 5.0.6 on 2024-08-30 01:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import shortuuid.django_fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='cat', primary_key=True, serialize=False, unique=True)),
                ('category_name', models.CharField(max_length=30, unique=True)),
                ('category_img', models.ImageField(null=True, upload_to='media/category_img')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='pro', primary_key=True, serialize=False, unique=True)),
                ('product_name', models.CharField(max_length=100)),
                ('product_img', models.ImageField(null=True, upload_to='media/product_img')),
                ('product_description', models.TextField(blank=True, null=True)),
                ('product_ingredients', models.TextField(blank=True, null=True)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_old_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product_quantity', models.IntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('product_status', models.BooleanField(default=True)),
                ('product_in_stock', models.BooleanField(default=True)),
                ('tags', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='', primary_key=True, serialize=False, unique=True)),
                ('profile_pic', models.ImageField(null=True, upload_to='media/profile_pic')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('no_street_line', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, default='Ahmedabad', max_length=20, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, default='Gujarat', max_length=20, null=True)),
                ('country', models.CharField(blank=True, default='India', max_length=20, null=True)),
                ('user_type', models.IntegerField(choices=[(1, 'Admin'), (2, 'Users')], default=2)),
                ('otp', models.IntegerField(blank=True, null=True)),
                ('vendor_id', models.CharField(blank=True, max_length=30, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='', primary_key=True, serialize=False, unique=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product_Images',
            fields=[
                ('product_images_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='img', primary_key=True, serialize=False, unique=True)),
                ('product_images', models.ImageField(null=True, upload_to='media/product_img')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='p_images', to='food_com.product')),
            ],
        ),
        migrations.CreateModel(
            name='Product_Review',
            fields=[
                ('product_review_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='rev', primary_key=True, serialize=False, unique=True)),
                ('product_review_message', models.TextField(blank=True, null=True)),
                ('product_rating', models.IntegerField(choices=[(1, '⭐☆☆☆☆'), (2, '⭐⭐☆☆☆'), (3, '⭐⭐⭐☆☆'), (4, '⭐⭐⭐⭐☆'), (5, '⭐⭐⭐⭐⭐')], default=None)),
                ('product_review_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='food_com.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Category',
            fields=[
                ('subcategory_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='subcat', primary_key=True, serialize=False, unique=True)),
                ('subcategory_name', models.CharField(max_length=30, unique=True)),
                ('subcategory_img', models.ImageField(null=True, upload_to='media/subcategory_img')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='food_com.category')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='sub_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_category', to='food_com.sub_category'),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('vendor_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='ven', primary_key=True, serialize=False, unique=True)),
                ('vendor_name', models.CharField(blank=True, max_length=100, null=True)),
                ('vendor_img', models.ImageField(null=True, upload_to='media/vendor_img')),
                ('vendor_cover_img', models.ImageField(null=True, upload_to='media/vendor_img')),
                ('vendor_description', models.TextField(blank=True, null=True)),
                ('vendor_address', models.CharField(blank=True, max_length=150, null=True)),
                ('vendor_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('shipping_on_time', models.CharField(blank=True, max_length=20, null=True)),
                ('vendor_rating', models.CharField(blank=True, max_length=20, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(default='Food Com', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to='food_com.vendor'),
        ),
        migrations.CreateModel(
            name='Vendor_Account_Request',
            fields=[
                ('vendor_account_request_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='ven', primary_key=True, serialize=False, unique=True)),
                ('vendor_account_status', models.IntegerField(choices=[(1, 'Request Pending'), (2, 'Request Approve'), (3, 'Request Reject')], default=1)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('wishlist_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefgh12345', length=10, max_length=20, prefix='', primary_key=True, serialize=False, unique=True)),
                ('wishlist_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='food_com.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
